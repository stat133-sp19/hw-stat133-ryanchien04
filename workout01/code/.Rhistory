ggplot(data = team_points, aes(x = team, y = sort(total_points, decreasing = FALSE))) + geom_col() + coord_flip() + labs(x = 'Team', y = 'Total Scored Points', title = 'NBA Teams Ranked by Total Scored Points') + geom_hline(aes(yintercept = mean(total_points)))
ggplot(data = points_salary, aes(x = team, y = sort(cost_point, decreasing = FALSE), color = team)) + geom_col() + coord_flip() + labs(x = 'Team', y = 'Cost Point', title = 'NBA Teams Ranked by Cost Point') + geom_hline(aes(yintercept = mean(cost_point), color = 'red'))
ggplot(data = points_salary, aes(x = team, y = sort(cost_point, decreasing = FALSE), color = team)) + geom_col() + coord_flip() + labs(x = 'Team', y = 'Cost Point', title = 'NBA Teams Ranked by Cost Point') + geom_hline(aes(yintercept = mean(cost_point), color = 'black'))
ggplot(data = points_salary, aes(x = team, y = sort(cost_point, decreasing = FALSE), color = team)) + geom_col() + coord_flip() + labs(x = 'Team', y = 'Cost Point', title = 'NBA Teams Ranked by Cost Point') + geom_hline(aes(yintercept = mean(cost_point)))
ggplot(data = points_salary, aes(x = team, y = sort(cost_point, decreasing = FALSE), color = team)) + geom_col() + coord_flip() + labs(x = 'Team', y = 'Cost Point', title = 'NBA Teams Ranked by Cost Point') + geom_hline(aes(yintercept = mean(cost_point)))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_point()
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_point() + geom_text(label = team)
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_point() + geom_text(aes(label = team))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_text(aes(label = team))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_point() + geom_text(aes(label = team))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_vline(aes(xintercept = mean(cost_point)))
geom_label(aes(label = team, color = team)) + geom_vline(aes(xintercept = median(cost_point)))
geom_label(aes(label = team, color = team)) + geom_vline(aes(xintercept = median(cost_point)))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_vline(aes(xintercept = median(cost_point)))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = median(cost_point)))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_vline(aes(xintercept = 3))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = 4))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = 1))
ggplot(data = points_salary, aes(x = median_salary, y = median_points)) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = 200))
ggplot(data = points_salary, aes(x = median_salary * (10**6), y = median_points)) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = mean(cost_point)))
mean(points_salary$cost_point)
ggplot(data = points_salary, aes(x = median_points, y = median_salary * (10**6))) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = mean(cost_point)))
ggplot(data = points_salary, aes(x = median_points, y = median_salary * (10**6))) + geom_label(aes(label = team, color = team)) + geom_abline(aes(intercept = 0, slope = median(cost_point)))
ggplot(data = points_salary, aes(x = median_points, y = median_salary * (10**6), size = cost_point)) + geom_label(aes(label = team, color = team))
ggplot(data = points_salary, aes(x = median_points, y = median_salary * (10**6), size = cost_point)) + geom_label(aes(label = team, color = team)) + labs(x = 'Median Points', y = 'Median Salary', title = 'Scatterplot of Salaries and Points For Each NBA Team')
pwd
pwd
ls
pwd
man
help(man)
head(mtcars)
getwd()
Desktop/stat133-lab05/exports/
)
Desktop/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
ryanchien/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
/Users/ryanchien/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
Users/ryanchien/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
getwd()
ryanchien/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
getwd()
Users/ryanchien/stat133-lab05/exports/write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
write.csv(x = mtcars, file = 'stat133-lab05/exports/exports.csv')
summary(mtcars[ ,c('mpg', 'disp')])
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
sink(file = 'stat133-lab05/exports/dataset.csv')
mtcars[ , c('mpg', 'disp', 'hp')]
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
sink()
sink(file = 'stat133-lab05/exports/summary-mtcars.txt')
summary(mtcars)
sink()
help(png)
png(filename = "stat133-lab05/exports/scatterplot-mpg-disp.png")
plot(mtcars$mpg, mtcars$disp, pch = 20,
xlab = 'Miles per Gallon', ylab = 'Displacement')
dev.off()
png(filename = "stat133-lab05/exports/scatterplot-mpg-wt.png")
plot(mtcars$mpg, mtcars$wt)
dev.off()
png(filename = 'stat133-lab05/exports/scatterplot-hp-wt.png')
plot(mtcars$hp, mtcars$wt)
dev.off()
str(mtcars)
str(mtcars, vec.len = 1)
jpeg(filename = 'histogram-mpg.jpeg')
hist(mtcars$mpg)
dev.off()
jpeg(filename = 'stat133-lab05/exports/histogram-mpg.jpeg')
dev.off()
jpeg(filename = 'stat133-lab05/exports/histogram-mpg.jpeg', width = 600, height = 400)
hist(mtcars$mpg)
dev.off()
help(pdf)
pdf(file = 'stat133-lab05/exports/histogram-mpg.jpeg', width = 7, height = 5)
dev.off()
pdf(file = 'stat133-lab05/exports/histogram-mpg.pdf', width = 7, height = 5)
hist(mtcars$mpg)
dev.off()
help(ggsave)
library(ggplot2)
help(ggsave)
gg_mpg_disp <- ggplot(data = mtcars, aes(x = mpg, y = disp)) + geom_point()
gg_mpg_disp
help(ggsave)
ggsave('stat133-lab05/exports/scatterplot-mpg-disp.pdf', gg_mpg_disp, width = 7, height = 5)
knitr::opts_chunk$set(echo = TRUE)
load('nba2018-salary-points.RData')
#1 Subsetting Vectors
four <- head(player, n = 4)
four[1]
four[0]
four[-1] #does not include the i-th index for -i
four[-c(1, 2, 3)]
four[5] #index out of bounds
four[c(1, 2, 2, 3, 3, 3)]
#2 Sequences and Repetitions
player[seq(2, length(player), 2)]
salary[seq(1, length(player), 2)]
team[seq(5, length(player), 5)]
scored[seq(10, length(player), 10)]
team[seq(length(player) - 1, 2, -2)]
#5 Manipulating Factors
position_fac <- factor(position)
position_fac[1:5]
position_fac[team == 'GSW']
table(position_fac[salary > 15000000])
total_sg = sum(table(team[position == 'SG']))
table(team[position == 'SG']) / total_sg
help(quantile)
help(which.max)
help(head)
help(load)
c(1, 2, 3) + c(1, 2)
a <- c(2, 3, 4)
b <- c(1, 2)
a + b
a <- c(2, 3, 4, 5)
a + b
x <- c(TRUE, FALSE)
y <- c(x, 10)
z <- c(y, 10, 'a')
type(x)
help(type)
typeof(x)
typeof(y)
typeof(z)
typeof(c(y, 10, TRUE))
typeof(c(y, 10L, TRUE))
typeof(c(5L, 2L, TRUE))
help(rep)
rep(1:3, times = 2)
help(seq)
help(matrix)
help("setwd")
help(full_join)
help(load)
load(ggplot)
load(ggplot2)
help(read.csv)
getwd()
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', stringsAsFactors = FALSE)
green <- read.csv('../data/draymond-green.csv', stringsAsFactors = FALSE)
durant <- read.csv('../data/kevin-durant.csv', stringsAsFactors = FALSE)
thompson <- read.csv('../data/klay-thompson.csv', stringsAsFactors = FALSE)
library(readr)
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
setwd("~/")
curry <- read.csv('..data/stephen-curry.csv', stringsAsFactors = FALSE)
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
getwd()
setwd("~/hw-stat133/workout01/code")
setwd("~/Desktop/hw-stat133/workout01/code")
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', stringsAsFactors = FALSE)
)
rm(list = ls())
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', stringsAsFactors = FALSE)
str(curry, vec.len = 1)
curry[shot_made_flag[curry$shot_made_flag == 'y']] <- 'shot_yes'
str(curry, vec.len = 1)
curry$shot_made_flag[shot_made_flag[curry$shot_made_flag == 'y']] <- 'shot_yes'
urry$shot_made_flag[curry$shot_made_flag == 'y'] <- 'shot_yes'
curry$shot_made_flag[curry$shot_made_flag == 'y'] <- 'shot_yes'
curry$shot_made_flag[curry$shot_made_flag == 'n'] <- 'shot_no'
str(curry, vec.len =1)
help(mutate)
curry$minute <- 12*(curry$period - 1) + (12 - curry$minutes_remaining)
str(curry)
klay_scatterplot <- ggplot(data = klay) + geom_point(aes(x = x, y = y, color = shot_made_flag))
library(ggplot2)
klay_scatterplot <- ggplot(data = klay) + geom_point(aes(x = x, y = y, color = shot_made_flag))
klay_scatterplot <- ggplot(data = thompson) + geom_point(aes(x = x, y = y, color = shot_made_flag))
curry_scatterplot <- ggplot(data = curry) + geom_point(aes(x = x, y = y, color = shot_made_flag))
curry_scatterplot
install.packages(jpeg)
install.packages('jpeg"')
install.packages('jpeg')
install.packages('grid')
install.packages("grid")
install.packages("grid")
install.packages("grid")
court_file <- '../images/nba-court.jpg'
court_image <- rasterGrob()
install.packages('jpeg')
install.packages(grid)
install.packages(jpeg)
install.packages('jpeg')
help(rasterGrob)
install.packages('grid')
install.packages("grid")
install.packages("grid")
rasterGrob
court_image <- rasterGrob(readJPEG(court_file), width = unit(1, 'npc'), height = unit(1, 'npc'))
library(grid)
library(jpeg)
court_image <- rasterGrob(readJPEG(court_file), width = unit(1, 'npc'), height = unit(1, 'npc'))
curry_shot_chart <- ggplot(data = curry) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
library(ggplot2)
curry_shot_chart <- ggplot(data = curry) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
curry_shot_chart
thompson <- read.csv('../data/klay-thompson.csv', stringsAsFactors = FALSE)
thompson$name <- rep('Klay Thompson', length = length(thompson$team_name))
thompson <- thompson[c(14, 1:13)]
thompson$shot_made_flag[thompson$shot_made_flag == 'y'] <- 'shot_yes'
thompson$shot_made_flag[thompson$shot_made_flag == 'n'] <- 'shot_no'
thompson$minute <- 12*(thompson$period - 1) + (12 - thompson$minutes_remaining)
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
court_image <- rasterGrob(readJPEG(court_file), width = unit(1, 'npc'), height = unit(1, 'npc'))
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Klay Thompson (2016 season)') + theme_minimal()
help(ggsave)
durant$minute <- 12*(durant$period - 1) + (12 - durant$minutes_remaining)
library(readr)
library(dplyr)
setwd("~/Desktop/hw-stat133/workout01/code")
#downloading the files
curry <- read.csv('../data/stephen-curry.csv', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', stringsAsFactors = FALSE)
green <- read.csv('../data/draymond-green.csv', stringsAsFactors = FALSE)
durant <- read.csv('../data/kevin-durant.csv', stringsAsFactors = FALSE)
thompson <- read.csv('../data/klay-thompson.csv', stringsAsFactors = FALSE)
#add name column
curry$name <- rep('Stephen Curry', length = length(curry$team_name))
curry <- curry[c(14, 1:13)]
iguodala$name <- rep('Andre Iguodala', length = length(iguodala$team_name))
iguodala <- iguodala[c(14, 1:13)]
green$name <- rep('Draymond Green', length = length(green$team_name))
green <- green[c(14, 1:13)]
durant$name <- rep('Kevin Durant', length = length(durant$team_name))
durant <- durant[c(14, 1:13)]
thompson$name <- rep('Klay Thompson', length = length(thompson$team_name))
thompson <- thompson[c(14, 1:13)]
#modifying shot_made_flag values
curry$shot_made_flag[curry$shot_made_flag == 'y'] <- 'shot_yes'
curry$shot_made_flag[curry$shot_made_flag == 'n'] <- 'shot_no'
iguodala$shot_made_flag[iguodala$shot_made_flag == 'y'] <- 'shot_yes'
iguodala$shot_made_flag[iguodala$shot_made_flag == 'n'] <- 'shot_no'
green$shot_made_flag[green$shot_made_flag == 'y'] <- 'shot_yes'
green$shot_made_flag[green$shot_made_flag == 'n'] <- 'shot_no'
durant$shot_made_flag[durant$shot_made_flag == 'y'] <- 'shot_yes'
durant$shot_made_flag[durant$shot_made_flag == 'n'] <- 'shot_no'
thompson$shot_made_flag[thompson$shot_made_flag == 'y'] <- 'shot_yes'
thompson$shot_made_flag[thompson$shot_made_flag == 'n'] <- 'shot_no'
#Create minute column
curry$minute <- 12*(curry$period - 1) + (12 - curry$minutes_remaining)
iguodala$minute <- 12*(iguodala$period - 1) + (12 - iguodala$minutes_remaining)
green$minute <- 12*(green$period - 1) + (12 - green$minutes_remaining)
durant$minute <- 12*(durant$period - 1) + (12 - durant$minutes_remaining)
thompson$minute <- 12*(thompson$period - 1) + (12 - thompson$minutes_remaining)
#sink the files summarize the output of each imported data frame
sink(file = '../output/andre-iguodala-summary.txt')
summary(iguodala)
sink()
sink(file = '../output/draymond-green-summary.txt')
summary(green)
sink()
sink(file = '../output/kevin-durant-summary.txt')
summary(durant)
sink()
sink(file = '../output/klay-thompson-summary.txt')
summary(thompson)
sink()
sink(file = '../output/stephen-curry-summary.txt')
summary(curry)
sink()
#stack the tables into a single data frame
combined_shots <- rbind(iguodala, green, durant, thompson, curry)
#create csv file
write.csv(x = combined_shots, file = '../data/shots-data.csv')
#sink the file
sink(file = '../output/shots-data-summary.txt')
summary(combined_shots)
sink()
#Klay Thompson Shot Chart Scatterplot
klay_scatterplot <- ggplot(data = klay) + geom_point(aes(x = x, y = y, color = shot_made_flag))
#court image
court_file <- '../images/nba-court.jpg'
court_image <- rasterGrob(readJPEG(court_file), width = unit(1, 'npc'), height = unit(1, 'npc'))
#shot charts
thompson_shot_chart <- ggplot(data = thompson) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Klay Thompson (2016 season)') + theme_minimal()
curry_shot_chart <- ggplot(data = curry) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Stephen Curry (2016 season)') + theme_minimal()
iguodala_shot_chart <- ggplot(data = iguodala) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Andre Iguodala (2016 season)') + theme_minimal()
green_shot_chart <- ggplot(data = green) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Draymond Green (2016 season)') + theme_minimal()
durant_shot_chart <- ggplot(data = durant) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Kevin Durant (2016 season)') + theme_minimal()
#shot chart pdf
ggsave(filename = '../images/andre-iguodala-shot-chart.pdf', plot = iguodala_shot_chart, width = 6.5, height = 5, unit = 'in')
ggsave(filename = '../images/draymond-green-shot-chart.pdf', plot = green_shot_chart, width = 6.5, height = 5, unit = 'in')
ggsave(filename = '../images/kevin-durant-shot-chart.pdf', plot = durant_shot_chart, width = 6.5, height = 5, unit = 'in')
ggsave(filename = '../images/klay-thompson-shot-chart.pdf', plot = thompson_shot_chart, width = 6.5, height = 5, unit = 'in')
ggsave(filename = '../images/stephen-curry-shot-chart.pdf', plot = curry_shot_chart, width = 6.5, height = 5, unit = 'in')
#facetted shot chart
#facetted shot chart
combined_shot_chart <- ggplot(data = combined_shots) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Starting Five (2016 season)') + facet_wrap(~ name)
combined_shot_chart
combined_shot_chart
#facetted shot chart
combined_shot_chart <- ggplot(data = combined_shots) + annotation_custom(court_image, -250, 250, -5, 420) + geom_point(aes(x = x, y = y, color = shot_made_flag)) + ylim(-50, 420) + ggtitle('Shot Chart: Starting Five (2016 season)') + facet_wrap(~ name)
ggsave(filename = '../images/gsw-shot-charts.pdf', plot = combined_shot_chart, width = 8, height = 7, unit = 'in')
ggsave(filename = '../images/gsw-shot-charts.png', plot = combined_shot_chart, width = 8, height = 7, unit = 'in')
View(curry)
help(summarise)
shots_data <- read.csv('../data/shots-data.csv')
two_point_EFP <- summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'), percent_made = made/total)
View(two_point_EFP)
three_point_EFP <- summarise(group_by(shots_data, name), total = sum(shot_type == '3PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'), percent_made = made/total)
View(three_point_EFP)
View(two_point_EFP)
two_point_EFP <- arange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'), percent_made = made/total), desc(percent_made))
two_point_EFP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'), percent_made = made/total), desc(percent_made))
View(two_point_EFP)
View(two_point_EFP)
three_point_EFP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '3PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'), percent_made = made/total), desc(percent_made))
View(three_point_EFP)
EFP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal' | shot_type == '3PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & (shot_type == '3PT Field Goal' | shot_type == '2PT Field Goal')), percent_made = made/total), desc(percent_made))
View(EFP)
'hello'[3]
two_point_ESP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'), percent_made = made/total), desc(percent_made))
three_point_ESP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '3PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'), percent_made = made/total), desc(percent_made))
ESP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal' | shot_type == '3PT Field Goal'), made = sum(shot_made_flag == 'shot_yes' & (shot_type == '3PT Field Goal' | shot_type == '2PT Field Goal')), percent_made = made/total), desc(percent_made))
mid_range_ESP <- arrange(summarise(group_by(shots_data, name), total = sum(shot_type == '2PT Field Goal' & action_type == 'Jump Shot'), made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal' & action_type == 'Jump Shot'), percent_made = made/total), desc(percent_made))
View(mid_range_ESP)
getwd()
rm(list = ls())
r <- 2
area <- pi * r^2
area
r <- 2
area <- pi * r^2
area
circle_area = function(radius = 1) {
area <- pi * (radius)^2
return (area)
}
circle_area()
circle_area(radius = 3)
r <- 2
area <- pi * r^2
area
circle_area = function(radius = 1) {
area <- pi * (radius)^2
return (area)
}
circle_area()
circle_area(radius = 3)
circle_area(radius = -2)
r <- 2
area <- pi * r^2
area
circle_area = function(radius = 1) {
if (radius < 0) {
stop('radius cannot be negative')
}
area <- pi * (radius)^2
return (area)
}
circle_area()
circle_area(radius = 3)
circle_area(radius = -2)
cylinder_area = function(radius = 1, height = 1) {
if (radius < 0 | height < 0) {
stop('Negative input')
}
area <- (2 * pi * radius * height) + (2 * pi * radius^2)
return (area)
}
cylinder_area()
cylinder_area(radius = 2, height = 3)
cylinder_area(radius = -2, height = 1)
cylinder_volume = funtion(radius = 1, height = 1) {
cylinder_volume = function(radius = 1, height = 1) {
if (radius < 0 | height < 0) {
stop('Negative input')
}
volume <- 2 * radius^2 * height
return (volume)
}
cylinder_volume()
cylinder_volume(radius = 3, height = 10)
cylinder_volume(height = 10, radius = 3)
is_even = function(x = 2) {
if(x % 2 == 0) {
is_even = function(x = 2) {
if (x % 2 == 0) {
is_even = function(x = 2) {
if (typeof(x) != 'double' | typeof(x) != 'integer') {
return (NA)
} else if (x % 2 == 0) {
is_even = function(x = 2) {
if (typeof(x) != 'double' | typeof(x) != 'integer') {
return (NA)
} else if (x %% 2 == 0) {
return (TRUE)
} else {
return (FALSE)
}
}
is_even(10)
is_even(33)
is_even('a')
is_even = function(x = 2) {
if (typeof(x) != 'double') {
return (NA)
} else if (x %% 2 == 0) {
return (TRUE)
} else {
return (FALSE)
}
}
is_even(10)
is_even(33)
is_even('a')
is_even = function() {
if (typeof(x) != 'double') {
return (NA)
} else if (x %% 2 == 0) {
return (TRUE)
} else {
return (FALSE)
}
}
is_even(10)
is_even = function(x = 2) {
if (typeof(x) != 'double') {
return (NA)
} else if (x %% 2 == 0) {
return (TRUE)
} else {
return (FALSE)
}
}
is_even(10)
is_even(33)
is_even('a')
is_odd = function(x = 1) {
if (typeof(x) != 'double') {
return (NA)
} else if (x %% 2 == 1) {
return (TRUE)
} else {
return (FALSE)
}
}
is_odd(1)
is_odd(4)
is_odd('a')
is_odd = function(x = 1) {
if (typeof(x) != 'double') {
return (NA)
} else if (x %% 2 == 1) {
return (TRUE)
} else {
return (FALSE)
}
}
is_odd()
is_odd(1)
is_odd(4)
is_odd('a')
grade = function(score = 100) {
if (score >= 90) {
return ('A')
} else if (score >= 80) {
return ('B')
} else if (score >= 70) {
return ('C')
} else if (score >= 60) {
return ('D')
} else {
return ('F')
}
}
grade(score = 90)
grade(score = 89.99999)
grade(score = 70.0000001)
grade(score = 50)
grade = function(score = 100) {
if (score > 100 | score < 0) {
stop('score must be a number between 0 and 100')
} else if (score >= 90) {
return ('A')
} else if (score >= 80) {
return ('B')
} else if (score >= 70) {
return ('C')
} else if (score >= 60) {
return ('D')
} else {
return ('F')
}
}
grade(score = 90)
grade(score = 89.99999)
grade(score = 70.0000001)
grade(score = 50)
grade(score = 100.0000002)
